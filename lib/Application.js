// Generated by CoffeeScript 1.7.1
(function() {
  var Directive, NeedDirective, ParentDirective, RepeatDirective, SectionDirective,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Directive = (function() {
    function Directive(symbol, input) {
      var _base;
      this.symbol = symbol;
      this.input = input;
      if (this.constructor === Directive) {
        throw new Error("Class Directive is an Abstract Class");
      }
      this["static"] = this.constructor;
      if ((_base = this["static"]).regex == null) {
        _base.regex = new RegExp("#" + this.symbol + " " + this.input);
      }
    }

    Directive.prototype.canHandle = function(text) {
      var result;
      if ((result = this["static"].regex.exec()) !== null) {
        return true;
      } else {
        return false;
      }
    };

    Directive.prototype.getDirective = function(text) {
      var key, result, string, stringSplit, value;
      result = this["static"].regex.exec(text);
      string = result[0];
      stringSplit = string.split(" ");
      key = stringSplit.unshift();
      value = stringSplit.join(" ");
      return {
        key: value
      };
    };

    return Directive;

  })();

  exports.Directive = Directive;

  SectionDirective = (function(_super) {
    __extends(SectionDirective, _super);

    function SectionDirective() {
      SectionDirective.__super__.constructor.call(this, "parent", "[^ ]+");
    }

    return SectionDirective;

  })(Directive);

  exports.SectionDirective = SectionDirective;

  RepeatDirective = (function(_super) {
    __extends(RepeatDirective, _super);

    function RepeatDirective() {
      RepeatDirective.__super__.constructor.call(this, "parent", "[^ ]+");
    }

    return RepeatDirective;

  })(Directive);

  exports.RepeatDirective = RepeatDirective;

  ParentDirective = (function(_super) {
    __extends(ParentDirective, _super);

    function ParentDirective() {
      ParentDirective.__super__.constructor.call(this, "parent", "[^ ]+");
    }

    return ParentDirective;

  })(Directive);

  exports.ParentDirective = ParentDirective;

  NeedDirective = (function(_super) {
    __extends(NeedDirective, _super);

    function NeedDirective() {
      NeedDirective.__super__.constructor.call(this, "need", "[^ ]+");
    }

    return NeedDirective;

  })(Directive);

  exports.NeedDirective = NeedDirective;

}).call(this);
